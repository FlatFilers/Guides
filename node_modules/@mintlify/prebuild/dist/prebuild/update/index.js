import { outputFile } from 'fs-extra';
import { getOpenApiFilesFromMintConfig } from './read/getOpenApiFilesFromMintConfig.js';
import { readPageContents, readSnippetsV2Contents } from './read/readContent.js';
import { resolveImportsAndWriteFiles } from './resolveImportsAndWriteFiles.js';
import { updateFavicons } from './updateFavicons.js';
import { updateGeneratedNav } from './updateGeneratedNav.js';
import { updateMintConfigFile } from './updateMintConfigFile.js';
import { writeFiles } from './write/writeFiles.js';
import { writeOpenApiFiles } from './write/writeOpenApiFiles.js';
export const update = async (contentDirectoryPath, staticFilenames, openApiFiles, contentFilenames, snippets, snippetV2Filenames) => {
    const pagePromises = readPageContents(contentDirectoryPath, openApiFiles, contentFilenames);
    const snippetV2Promises = readSnippetsV2Contents(contentDirectoryPath, snippetV2Filenames);
    const [mintConfig, snippetV2Contents, { mdxFilesWithNoImports, pagesAcc, filesWithImports }] = await Promise.all([
        updateMintConfigFile(contentDirectoryPath),
        snippetV2Promises,
        pagePromises,
    ]);
    const [openapiFilesFromMintConfig] = await Promise.all([
        getOpenApiFilesFromMintConfig(mintConfig),
        resolveImportsAndWriteFiles(openApiFiles, pagesAcc, snippetV2Contents, filesWithImports),
    ]);
    openApiFiles.push(...openapiFilesFromMintConfig);
    await Promise.all([
        writeOpenApiFiles(openApiFiles),
        updateGeneratedNav(pagesAcc, mintConfig.navigation),
        updateFavicons(mintConfig, contentDirectoryPath),
        ...writeMdxFilesWithNoImports(mdxFilesWithNoImports),
        ...writeFiles(contentDirectoryPath, 'public', [...staticFilenames, ...snippets]),
    ]);
    return mintConfig;
};
export const writeMdxFilesWithNoImports = (mdxFilesWithNoImports) => {
    return mdxFilesWithNoImports.map(async (response) => {
        const { targetPath, fileContent } = response;
        await outputFile(targetPath, fileContent, {
            flag: 'w',
        });
    });
};
